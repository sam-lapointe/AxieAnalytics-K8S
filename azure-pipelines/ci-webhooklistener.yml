parameters:
- name: artifactName
  type: string
  default: 'webhook_listener'

steps:
- script: |
    echo "Python Version: $(PYTHON_VERSION)"
    if ! python$(PYTHON_VERSION) --version > /dev/null 2>&1; then
      echo "❌ python$(PYTHON_VERSION) must be installed on the Self-Hosted Agent."
      exit 1
    else
      python$(PYTHON_VERSION) --version
    fi
  displayName: Check Python Version

- script: |
    python$(PYTHON_VERSION) -m venv venv
    source venv/bin/activate
    pip install -r requirements.txt
    pip install -r requirements-dev.txt
  displayName: Install Dependencies
  workingDirectory: $(System.DefaultWorkingDirectory)/webhook_listener

- script: |
    source venv/bin/activate
    python$(PYTHON_VERSION) -m pytest test_function_app.py
  displayName: Unit Tests
  workingDirectory: $(System.DefaultWorkingDirectory)/webhook_listener

- script: |
    source venv/bin/activate
    ruff format --check --diff *.py
  displayName: Check formatting
  workingDirectory: $(System.DefaultWorkingDirectory)/webhook_listener

- script: |
    source venv/bin/activate
    ruff check *.py
  displayName: Check lint
  workingDirectory: $(System.DefaultWorkingDirectory)/webhook_listener

- script: |
    if ! sonar-scanner -v > /dev/null 2>&1; then
      echo "❌ sonar-scanner CLI must be installed on the Self-Hosted Agent."
    else
      sonar-scanner -v
    fi
  displayName: Check sonar-scanner version

- script: |
    sonar-scanner \
      -D sonar.projectKey=$(SONARQUBE_PROJECT_WEBHOOK) \
      -D sonar.projectName=$(SONARQUBE_PROJECT_WEBHOOK) \
      -D sonar.sources=$(System.DefaultWorkingDirectory)/webhook_listener \
      -D sonar.host.url=$(SONARQUBE_HOST_URL) \
      -D sonar.token=$(SONARQUBE_TOKEN)
  displayName: SonarQube Scanner

- task: Docker@2
  displayName: Build Docker Image
  inputs:
    command: 'build'
    repository: 'samlapointe01/axie-analytics'
    dockerfile: '$(System.DefaultWorkingDirectory)/webhook_listener/Dockerfile'
    buildContext: '$(System.DefaultWorkingDirectory)/webhook_listener'
    tags: |
      $(artifactName)
      $(artifactName)-$(Build.BuildId)
      $(artifactName)-latest

- task: Docker@2
  displayName: Push Docker Image
  inputs:
    command: 'push'
    repository: 'samlapointe01/axie-analytics'
    containerRegistry: 'Docker Hub'
    tags: |
      $(artifactName)
      $(artifactName)-$(Build.BuildId)
      $(artifactName)-latest